{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Adapter/Adapter.ts","webpack:///src/app/Bridge/GUIControl.ts","webpack:///src/app/Bridge/KeyboardControl.ts","webpack:///src/app/Bridge/PieceControl.ts","webpack:///src/app/Bridge/PieceImplementation.ts","webpack:///src/app/Builder/builder.ts","webpack:///src/app/Command/command.ts","webpack:///src/app/Composite/composite.ts","webpack:///src/app/Dto/MessageDto.ts","webpack:///src/app/Dto/PieceDto.ts","webpack:///src/app/Prototype/AK47Gun.ts","webpack:///src/app/Prototype/ConcreteGun.ts","webpack:///src/app/Prototype/Oponent.ts","webpack:///src/app/Prototype/USPGun.ts","webpack:///src/app/Singleton/gameBot.ts","webpack:///src/app/Strategy/strategy.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chat/chat.component.ts","webpack:///src/app/chat/chat.component.html","webpack:///src/app/game/board/board.component.ts","webpack:///src/app/game/board/board.component.html","webpack:///src/app/game/game.component.ts","webpack:///src/app/game/game.component.html","webpack:///src/app/game/oponent-board/oponent-board.component.ts","webpack:///src/app/game/oponent-board/oponent-board.component.html","webpack:///src/app/models/SpecialPiece.ts","webpack:///src/app/models/board.ts","webpack:///src/app/models/piece.ts","webpack:///src/app/models/time.ts","webpack:///src/app/piecesAbstractFactory/abstractFactory.ts","webpack:///src/app/services/board.service.ts","webpack:///src/app/services/chat.service.ts","webpack:///src/app/services/connection.service.ts","webpack:///src/app/services/subscriber.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/shared/constants.ts","webpack:///src/app/shared/navbar/navbar.component.ts","webpack:///src/app/shared/navbar/navbar.component.html","webpack:///src/app/shared/user.ts","webpack:///src/app/user/login/login.component.ts","webpack:///src/app/user/login/login.component.html","webpack:///src/app/user/player.ts","webpack:///src/app/user/registration/registration.component.ts","webpack:///src/app/user/registration/registration.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Adapter","x","y","color","shape","receivePiece","MapablePiece","piece","console","log","user","name","password","GUIControl","boardService","emitPiece","emitterFunction","emit","rotate","right","left","down","selector","template","KeyboardControl","p","PieceControl","pieceImp","JSON","parse","stringify","length","forEach","row","reverse","move","PieceImplementation","PieceBuilder","reset","player","result","Director","builder","setPlayer","setColor","setShape","changeColor","state","push","index","Math","floor","random","pop","changeShape","dto","TimerTask","taskName","count","isCompleted","Task","imgURL","TaskBank","tasksArray","taskComponent","every","element","checkIfCompleted","MessageDto","msgText","PieceDto","AK47Gun","damage","ConcreteGun","oponent","Oponent","values","Object","assign","USPGun","clone","Bot","points","instance","Context","strategy","board","useDefender","defender1","defender2","temp","RIGHT","LEFT","defender3","defender4","rotationCount","UP","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ChatComponent","chatService","msgDto","msgInboxArray","retrieveMapperObject","subscribe","receivedObj","addToInbox","s1","getInstance","s2","broadcastMessage","introRules","obj","newObj","window","alert","send","BoardComponent","time","start","elapsed","level","stopwatch","pieceCount","keyboardControl","gunsArray","gunsDeepCopiesArray","gunsShallowCopiesArray","oponents","task1","task2","task3","task4","task5","task6","rootTaskBank","TaskBank1","TaskBank2","TaskBank3","date","Date","rotateClockwise","clockwise","N","matrix","m","i","j","userService","getUserProfile","res","userId","UserName","initBoard","event","preventDefault","keyCode","E","commandShape","execute","R","undo","D","commandColor","F","DOWN","addComponent","ctx","canvas","nativeElement","getContext","width","height","scale","getEmptyBoard","now","getTime","toLowerCase","setStrategy","defend","drop","gameOver","draw","requestId","requestAnimationFrame","animate","bind","valid","broadcastPiece","freeze","clearLines","broadcastBoard","clearRect","drawBoard","value","fillStyle","fillRect","lines","splice","unshift","Array","fill","getLineClearPoints","cancelAnimationFrame","font","fillText","s","gameOverMessage","lineClearPoints","SINGLE","DOUBLE","TRIPLE","TETRIS","getBoardById","Id","bomb","setRadius","radius","kalasas","owner","usp","director","setBuilder","buildBomb","getSpecialPiece","gun","newGun","cloneDeep","indexOf","build","requiredColor","requiredShape","task","setToCompleted","getTasks","play","test","player1","player2","getAK47","getUSP","shoot","GameComponent","bService","uService","OponentBoardComponent","subscriberService","add","retrieveMapperPiece","pieceDto","remove","subject","retrieveMapperBoard","retrieveObj","SpecialPiece","Board","Piece","spawn","power","Time","TimeFactory","ExpertTime","VeryFastTime","FastTime","NormalTime","SlowTime","getSpeed","timeObject","factory","getSlowSpeed","getNormalSpeed","getFastSpeed","getVeryFastSpeed","getExpertSpeed","RedFactory","RedJShape","RedOShape","RedLShape","RedZShape","RedTShape","RedSShape","BlueFactory","simple","ConcreteBlueJShape","decorator1","SoundDecorator","AlertDecorator","BlueOShape","BlueLShape","BlueZShape","BlueTShape","BlueSShape","GreenFactory","GreenJShape","GreenOShape","GreenLShape","GreenZShape","GreenTShape","GreenSShape","YellowFactory","YellowJShape","YellowOShape","YellowLShape","YellowZShape","YellowTShape","YellowSShape","JShape","BlueJShape","OShape","LShape","ZShape","TShape","SShape","getRandomInt","max","getRandomPiece","factoryType","pieceType","createJShape","createOShape","createLShape","createZShape","createTShape","createSShape","Decorator","wrapee","option","snd","Audio","operation","BoardService","http","connectionService","rootUrl","boards","sharedPiece","sharedBoard","adapter","connection","on","mapSpawnPiece","next","getPiece","getState","tokenHeader","localStorage","getItem","post","headers","get","Player","Height","Width","boradMatrix","BoardMatrix","find","b","asObservable","dy","dx","isEmpty","insideWalls","aboveFloor","notOccupied","providedIn","ChatService","POST_URL","receiveMessageObject","sharedObj","message","mapReceiveMessage","ConnectionService","connectoin","withUrl","accessTokenFactory","configureLogging","Information","observers","onclose","observer","isExist","includes","observerIndex","update","notify","setTimeout","SubscriberService","boardState","line","UserService","router","newUser","mapUser","getUser","COLS","ROWS","BLOCK_SIZE","LINES_PER_LEVEL","KEY","ESC","SPACE","POINTS","SOFT_DROP","HARD_DROP","SHAPES","SHAPE","COLORS","LEVEL","NavbarComponent","User","NewUser","password2","LoginComponent","service","model","login","setItem","token","onSubmit","RegistrationComponent","register","UserComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { User } from 'src/app/shared/user';\r\nimport { IUser, INewUser } from './../shared/interfaces';\r\nimport { PieceDto } from './../Dto/PieceDto';\r\nimport { IAdapter } from './IAdapter';\r\n\r\nexport class Adapter implements IAdapter{\r\n    piece: PieceDto\r\n    user: IUser\r\n    \r\n    constructor(){ \r\n    }\r\n    \r\n    mapSpawnPiece(x: number, y: number, color: string, shape: number[][]) {\r\n        let receivePiece: PieceDto = new MapablePiece(x, y, color, shape);\r\n        this.piece = receivePiece;\r\n        console.log(\"ADAPTER dalele buvo adaptuota\");\r\n    }\r\n\r\n    getPiece(): PieceDto{\r\n        return this.piece;\r\n    }\r\n\r\n    mapUser(user: INewUser){\r\n        this.user = new User(user.name, user.password)\r\n        //this.user.name = ;\r\n        //this.user.password = \r\n        console.log(\"ADAPTER naujo vartotojo duomenys buvo adaptuoti\");\r\n    }\r\n\r\n    getUser(): IUser{\r\n        return this.user\r\n    }\r\n\r\n}\r\n\r\nexport class MapablePiece extends PieceDto{\r\n    x: number;\r\n    y: number;\r\n    color: string;\r\n    shape: number[][]\r\n\r\n    constructor(x: number, y: number, color: string, shape: number[][]){ \r\n        super();\r\n        this.x = x;\r\n        this.y = y;\r\n        this.shape = shape;\r\n        this.color = color;\r\n    }\r\n}","import { BoardService } from './../services/board.service';\r\nimport { IPiece } from 'src/app/shared/interfaces';\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { PieceControl } from './PieceControl';\r\n\r\n@Component({\r\n    selector: 'gui-movement',\r\n    template: `\r\n    <button (click)=\"rotate()\">Rotate</button>\r\n    <br>\r\n    <button (click)=\"right()\">Right</button>\r\n    <br>\r\n    <button (click)=\"left()\">Left</button>\r\n    <br>\r\n    <button (click)=\"down()\">Down</button>\r\n    `\r\n})\r\nexport class GUIControl extends PieceControl {\r\n    @Input() piece: IPiece\r\n    @Output() emitPiece = new EventEmitter<IPiece>();\r\n\r\n    constructor(private boardService: BoardService){\r\n        super();\r\n    }\r\n\r\n    rotate(){\r\n        console.log(\"BRIDGE GUI method was called rotate()\")\r\n        this.piece = super.rotate(this.piece);\r\n        this.emitterFunction()\r\n        return this.piece\r\n    }\r\n\r\n    right(){\r\n        console.log(\"BRIDGE GUI method was called right()\")\r\n        this.piece = super.right(this.piece);\r\n        this.emitterFunction()\r\n        return this.piece\r\n    }\r\n\r\n    left(){\r\n        console.log(\"BRIDGE GUI method was called left()\")\r\n        this.piece = super.left(this.piece);\r\n        this.emitterFunction()\r\n        return this.piece\r\n    }\r\n\r\n    down(){\r\n        console.log(\"BRIDGE GUI method was called down()\")\r\n        this.piece = super.down(this.piece);\r\n        this.emitterFunction()\r\n        return this.piece\r\n    }\r\n\r\n    emitterFunction(){\r\n        this.emitPiece.emit(this.piece);\r\n    }\r\n}","import { IPiece } from 'src/app/shared/interfaces';\r\nimport { PieceControl } from './PieceControl';\r\n\r\nexport class KeyboardControl extends PieceControl{\r\n    \r\n    rotate(p: IPiece){\r\n        p=super.rotate(p);\r\n        console.log(\"BRIDGE keyboard input control, rotate()\");\r\n        return p;\r\n    }\r\n    \r\n    right(p: IPiece){\r\n        super.right(p);\r\n        console.log(\"BRIDGE keyboard input control, right()\");\r\n        return p;\r\n    }\r\n    \r\n    left(p: IPiece){\r\n        super.left(p);\r\n        console.log(\"BRIDGE keyboard input control, left()\");\r\n        return p;\r\n    }\r\n    \r\n    down(p: IPiece){\r\n        super.down(p);\r\n        console.log(\"BRIDGE keyboard input control, down()\");\r\n        return p;\r\n    }\r\n}","import { IPiece } from 'src/app/shared/interfaces';\r\nimport { PieceImplementation } from './PieceImplementation';\r\n\r\nexport abstract class PieceControl {\r\n    private pieceImp = new PieceImplementation();\r\n\r\n    rotate(piece: IPiece): IPiece {\r\n        let p: IPiece = JSON.parse(JSON.stringify(piece));\r\n        for (let y = 0; y < p.shape.length; ++y) {\r\n          for (let x = 0; x < y; ++x) {\r\n            [p.shape[x][y], p.shape[y][x]] = [p.shape[y][x], p.shape[x][y]];\r\n          }\r\n        }\r\n        p.shape.forEach(row => row.reverse());\r\n        \r\n        return this.pieceImp.move(p);\r\n    }\r\n\r\n    right(piece: IPiece) {\r\n        //let p: IPiece = JSON.parse(JSON.stringify(piece));\r\n        piece.x++;\r\n        return this.pieceImp.move(piece);\r\n    }\r\n\r\n    left(piece: IPiece){\r\n        //let p: IPiece = JSON.parse(JSON.stringify(piece));\r\n        piece.x--;\r\n        return this.pieceImp.move(piece);\r\n    }\r\n\r\n    down(piece: IPiece){\r\n        //let p: IPiece = JSON.parse(JSON.stringify(piece));\r\n        piece.y++;\r\n        return this.pieceImp.move(piece);\r\n    }\r\n}","import { IPiece } from 'src/app/shared/interfaces';\r\nexport class PieceImplementation {\r\n    move(p: IPiece): IPiece{\r\n        console.log(\"Piece implementation move method was called\");\r\n        return p\r\n    }\r\n}","import { BoardComponent } from '../game/board/board.component';\r\nimport { OponentBoardComponent } from '../game/oponent-board/oponent-board.component';\r\nimport { SpecialPiece } from '../models/SpecialPiece';\r\nimport { ChatService } from '../services/chat.service';\r\nimport { Player } from '../user/player';\r\n\r\n\r\ninterface Builder {\r\n  setColor(color: string): void;\r\n  setShape(shape: number[][]): void;\r\n  setPlayer(player: Player):void;\r\n}\r\n\r\nexport class PieceBuilder implements Builder {\r\n  public piece: SpecialPiece\r\n\r\n  constructor() {\r\n    this.reset();\r\n  }\r\n\r\n  public reset(): void {\r\n    this.piece = new SpecialPiece();\r\n  }\r\n\r\n  public setShape(shape: number[][]): void {\r\n    this.piece.shape = shape;\r\n  }\r\n  public setPlayer(player: Player): void {\r\n    this.piece.player = player;\r\n  }\r\n\r\n  public setColor(color: string): void {\r\n    this.piece.color =color;\r\n  }\r\n\r\n  public getSpecialPiece(): SpecialPiece {\r\n    const result = this.piece;\r\n    this.reset();\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\nexport class Director {\r\n  private builder: Builder;\r\n  private player: Player;\r\n  public setBuilder(builder: Builder): void {\r\n    this.builder = builder\r\n  }\r\n\r\n  playerBoard: BoardComponent;\r\n  public buildBomb(): void {\r\n    this.builder.setPlayer(this.player);\r\n    this.builder.setColor(\"Black\");\r\n    this.builder.setShape([[0, 0, 0], [0, 1, 0], [0, 0, 0]]);\r\n  }\r\n\r\n  public BuildLongPiece():void{\r\n    this.builder.setPlayer(this.player);\r\n    this.builder.setColor(\"Blue\");\r\n    this.builder.setShape([[0, 1, 0], [0, 1, 0], [0, 1, 0]]);\r\n  }\r\n\r\n}\r\n","import { BoardComponent } from '../game/board/board.component';\r\nimport { OponentBoardComponent } from '../game/oponent-board/oponent-board.component';\r\nimport { Piece } from '../models/piece';\r\nimport { SpecialPiece } from '../models/SpecialPiece';\r\nimport { getRandomPiece } from '../piecesAbstractFactory/abstractFactory';\r\nimport { ChatService } from '../services/chat.service';\r\nimport { COLORS, SHAPE } from '../shared/constants';\r\nimport { Player } from '../user/player';\r\n\r\n\r\ninterface ICommand {\r\n  execute(): void;\r\n  undo(): void;\r\n}\r\n\r\n\r\nexport class changeColor implements ICommand{\r\n  private state: string[] = [];\r\n  piece: Piece;\r\n\r\n  constructor(piece : Piece) {\r\n    this.piece = piece;\r\n  }\r\n  private setColor(color: string): void {\r\n    this.piece.color = color;\r\n  }\r\n\r\n  public execute(): void {\r\n    this.state.push(this.piece.color);\r\n    console.log(this.state);\r\n    var index = Math.floor(Math.random() * Math.floor(8));\r\n    this.setColor(COLORS[index]);\r\n    \r\n  }\r\n\r\n  public undo() {\r\n    var color = this.state[this.state.length-1];\r\n    this.state.pop();\r\n    this.setColor(color);\r\n  }\r\n}\r\n\r\nexport class changeShape implements ICommand {\r\n  private state: Array<number[][]> = [];\r\n  piece: Piece;\r\n\r\n  constructor(piece: Piece) {\r\n    this.piece = piece;\r\n  }\r\n\r\n  private setShape(shape: number[][]) {\r\n    this.piece.dto.shape = shape;\r\n    this.piece.shape = this.piece.dto.shape;\r\n    console.log(this.piece.dto);\r\n  }\r\n\r\n  public execute() {\r\n    this.state.push(this.piece.shape);\r\n    var index = Math.floor(Math.random() * Math.floor(SHAPE.length));\r\n    console.log(index);\r\n    console.log(SHAPE[index]);\r\n    this.setShape(SHAPE[index]);\r\n    console.log(\"Shape changed\");\r\n  }\r\n  public undo() {\r\n    var shape = this.state[this.state.length - 1];\r\n    this.state.pop();\r\n    this.setShape(shape);\r\n    console.log(\"Undo\");\r\n  }\r\n}\r\n","\r\n\r\nexport interface TaskComponent {\r\n  checkIfCompleted(): boolean;\r\n}\r\n\r\n\r\nexport class TimerTask implements TaskComponent {\r\n  private taskName: string;\r\n  private count: number;\r\n  private isCompleted = false;\r\n\r\n  constructor(taskName, count) {\r\n    this.taskName = taskName;\r\n    this.count = count;\r\n  }\r\n\r\n  public setToCompleted(): void {\r\n    this.isCompleted = true;\r\n  }\r\n\r\n  public getTaskName(): string {\r\n    return this.taskName;\r\n  }\r\n\r\n  public getCount(): number {\r\n    return this.count\r\n  }\r\n\r\n  public checkIfCompleted(): boolean {\r\n    return this.isCompleted;\r\n  }\r\n}\r\n\r\nexport class Task implements TaskComponent {\r\n  private taskName: string;\r\n  private count: number;\r\n  private isCompleted = false;\r\n  private imgURL: string\r\n\r\n  constructor(taskName, count, imgURL){\r\n    this.taskName = taskName;\r\n    this.count = count;\r\n    this.imgURL = imgURL;\r\n  }\r\n\r\n  public setToCompleted():void {\r\n    this.isCompleted = true;\r\n  }\r\n\r\n  public getTaskName(): string {\r\n    return this.taskName;\r\n  }\r\n\r\n  public getCount(): number {\r\n    return this.count\r\n  }\r\n\r\n  public checkIfCompleted(): boolean {\r\n    return this.isCompleted;\r\n  }\r\n}\r\n\r\nexport class TaskBank implements TaskComponent {\r\n\r\n  private tasksArray: TaskComponent[]=[];\r\n\r\n  public addComponent(taskComponent: TaskComponent) {\r\n    this.tasksArray.push(taskComponent);\r\n  }\r\n\r\n  public getTasks(): TaskComponent[] {\r\n    return this.tasksArray;\r\n  }\r\n\r\n  checkIfCompleted(): boolean {\r\n    return this.tasksArray.every(function (element: Task) {\r\n      return element.checkIfCompleted();\r\n    });\r\n    }\r\n\r\n\r\n}\r\n\r\n","export class MessageDto {\r\n  constructor(\r\n    public user: string,\r\n    public msgText: string\r\n  ){}\r\n}\r\n","import { IPiece } from './../shared/interfaces';\r\n\r\nexport class PieceDto implements IPiece {\r\n  radius: number;\r\n  power: string;\r\n  rotationCount: number;\r\n  x: number = 0;\r\n  y: number = 0;\r\n  color: string = \"\";\r\n  shape: number[][] = null;\r\n}\r\n\r\n","import { Player } from './../user/player';\r\nimport { ConcreteGun } from './ConcreteGun';\r\n\r\nexport class AK47Gun extends ConcreteGun{\r\n    constructor(){\r\n        super();\r\n        this.name=\"AK47\";\r\n        this.damage = 'Damage from AK47 to ';\r\n        console.log(\"PROTOTYPE AK47 Sukurtas\")\r\n    }\r\n}","import { Player } from './../user/player';\r\nimport { Oponent } from './Oponent';\r\nimport { IGun } from './IGun';\r\n\r\nexport class ConcreteGun implements IGun{\r\n    public name;\r\n    public damage: string;\r\n    public oponent: Oponent;\r\n    public owner: Player;\r\n    \r\n\r\n    constructor(){\r\n        this.oponent = new Oponent({id: \"\", name: \"Not set\"})\r\n    }\r\n    \r\n    clone(): this {\r\n        console.log(\"PROTOTYPE Sukurta shallow kopija\");\r\n        return {...this};\r\n    }\r\n}","export class Oponent {\r\n    id: string;\r\n    name: string;\r\n\r\n    constructor(values: Object = {}){\r\n        Object.assign(this, values);\r\n    }\r\n}","import { ConcreteGun } from './ConcreteGun';\r\n\r\nexport class USPGun extends ConcreteGun{\r\n\r\n    constructor(){\r\n        super();\r\n        this.name = \"USP\"\r\n        this.damage = 'Damage from USP to ';\r\n        \r\n        console.log(\"PROTOTYPE USP Sukurtas\")\r\n    }\r\n\r\n    cloneDeep(): this{\r\n        const clone = {...this};\r\n        clone.oponent = {\r\n            ...this.oponent\r\n        };\r\n        console.log(\"PROTOTYPE Sukurta deep kopija\");\r\n        return clone;\r\n    }\r\n    \r\n}","import { IMessage } from './../shared/interfaces';\r\nimport { MessageDto } from './../Dto/MessageDto';\r\nimport { Player } from '../user/player';\r\n\r\nexport class Bot {\r\n  private static instance: Bot;\r\n\r\n  private constructor() {\r\n\r\n  }\r\n\r\n  public static getInstance(): Bot {\r\n    if(!Bot.instance) {\r\n      Bot.instance = new Bot();\r\n    }\r\n\r\n    return Bot.instance;\r\n  }\r\n\r\n  public introRules(): IMessage{\r\n    return new MessageDto(\"Hello I am Singleton Game bot \", \"There is only one instance of me. I will Introduce the game rules\");\r\n  }\r\n\r\n  public gameOverMessage(player: Player): IMessage {\r\n    console.log(\"SINGLETON anounces game result\");\r\n    return new MessageDto(\"Singleton Bot\", `${player.name} end game. His result: ${player.points}`);\r\n  }\r\n}\r\n","import { IMessage, IPiece } from './../shared/interfaces';\r\nimport { MessageDto } from './../Dto/MessageDto';\r\nimport { Player } from './../user/player';\r\nimport { ChatService } from '../services/chat.service';\r\nimport { Piece } from '../models/piece';\r\nimport { BoardService } from '../services/board.service';\r\nimport { BoardComponent } from '../game/board/board.component';\r\nimport { Key } from 'protractor';\r\nimport { KEY } from '../shared/constants';\r\n\r\n\r\nexport class Context {\r\n  private strategy: defenderStrategy;\r\n\r\n  constructor(strategy: defenderStrategy) {\r\n    this.strategy = strategy;\r\n  }\r\n\r\n  public setStrategy(strategy: defenderStrategy) {\r\n    this.strategy = strategy;\r\n  }\r\n\r\n  public defend(player: string, piece: Piece, board: BoardService): IPiece {\r\n    return this.strategy.useDefender(player, piece, board);\r\n  }\r\n}\r\n\r\ninterface defenderStrategy {\r\n  useDefender(player: string, piece: Piece, board: BoardService): IPiece;\r\n}\r\n\r\n\r\nexport class defender1 implements defenderStrategy {\r\n  public useDefender(player: string, piece: Piece, board: BoardService): IPiece {\r\n    console.log(\"defender 1\");\r\n    return board.rotate(piece);\r\n  }\r\n}\r\n\r\nexport class defender2 implements defenderStrategy {\r\n  public useDefender(player: string, piece: Piece, board: BoardService): IPiece {\r\n    var temp = KEY.RIGHT;\r\n    KEY.RIGHT = KEY.LEFT;\r\n    KEY.LEFT = temp;\r\n    console.log(\"defender 2\");\r\n    return null;\r\n  }\r\n}\r\n\r\nexport class defender3 implements defenderStrategy {\r\n  public useDefender(player: string, piece: Piece, board: BoardService): IPiece {\r\n    KEY.RIGHT = null;\r\n    KEY.LEFT = null;\r\n    console.log(\"defender 3\");\r\n    return null;\r\n  }\r\n}\r\n\r\nexport class defender4 implements defenderStrategy {\r\n  public useDefender(player: string, piece: Piece, board: BoardService): IPiece {\r\n    if (piece.rotationCount >= 2) {\r\n      KEY.UP = null;\r\n    }\r\n    console.log(\"defender 4\");\r\n    return null;\r\n  }\r\n}\r\n","import { GameComponent } from './game/game.component';\r\nimport { LoginComponent } from './user/login/login.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule} from '@angular/router';\r\nimport { RegistrationComponent } from './user/registration/registration.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'', redirectTo:'game', pathMatch: 'full'},\r\n  {path: 'game', component: GameComponent},\r\n  {path:'user', component: UserComponent,\r\n  children: [\r\n      {path: 'registration', component: RegistrationComponent},\r\n      {path: 'login', component: LoginComponent}\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule{}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'tetris-front';\r\n}\r\n","<h1>Tetris Game</h1>\r\n<navbar></navbar>\r\n<span class=\"content\"></span>\r\n<router-outlet></router-outlet>\r\n","import { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ChatComponent } from './chat/chat.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BoardComponent } from './game/board/board.component';\r\nimport { OponentBoardComponent } from './game/oponent-board/oponent-board.component';\r\nimport { NavbarComponent } from './shared/navbar/navbar.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { RegistrationComponent } from './user/registration/registration.component';\r\nimport { LoginComponent } from './user/login/login.component';\r\nimport { GameComponent } from './game/game.component';\r\nimport { GUIControl } from './Bridge/GUIControl';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChatComponent,\r\n    NavbarComponent,\r\n    UserComponent,\r\n    RegistrationComponent,\r\n    LoginComponent,\r\n    GameComponent,\r\n    OponentBoardComponent,\r\n    BoardComponent,\r\n    GUIControl\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Bot } from './../Singleton/gameBot';\r\nimport { MessageDto } from './../Dto/MessageDto';\r\nimport { ChatService } from './../services/chat.service';\r\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n  msgDto: MessageDto = new MessageDto(\"\", \"\");\r\n  msgInboxArray: MessageDto[] = [];\r\n\r\n  constructor(private chatService: ChatService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.chatService.retrieveMapperObject().subscribe((receivedObj: MessageDto) => {\r\n      this.addToInbox(receivedObj);\r\n    });\r\n  }\r\n\r\n  //Creates Game Bot Singleton instance and itroduces rules to players\r\n  introduceRules(){\r\n    const s1=Bot.getInstance();\r\n    const s2=Bot.getInstance();\r\n\r\n    if (s1 === s2) {\r\n      console.log('Singleton works, both variables contain the same instance.');\r\n    } else {\r\n        console.log('Singleton failed, variables contain different instances.');\r\n    }\r\n    console.log(\"Singletone sent message to chat\")\r\n    this.chatService.broadcastMessage(s1.introRules());\r\n  }\r\n\r\n  // calls the service method to get the new messages sent\r\n  addToInbox(obj: MessageDto) {\r\n    let newObj = new MessageDto(obj.user, obj.msgText);\r\n    this.msgInboxArray.push(newObj);\r\n  }\r\n\r\n  //sends the message via service\r\n  send(): void {\r\n    if(this.msgDto) {\r\n      if(this.msgDto.user.length == 0 || this.msgDto.msgText.length == 0){\r\n        window.alert(\"Both fields are required. \");\r\n        return ;\r\n      } else {\r\n        this.chatService.broadcastMessage(this.msgDto);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div>\r\n  <h2>Public Chat</h2>\r\n</div>\r\n<div>\r\n  <div>\r\n    <ul>\r\n      <li *ngFor=\"let mObj of msgInboxArray\" [ngClass]=\"mObj.user === msgDto.user ? 'in-msg' : 'ex-msg'\">{{mObj.user}} :<br /><span class=\"msg-italic-style\">{{mObj.msgText}}</span></li>\r\n    </ul>\r\n  </div>\r\n  <div>\r\n    <input type=\"text\" placeholder=\"Type message here\" [(ngModel)]=\"msgDto.msgText\"  />\r\n    <button class=\"btn btn-danger\" (click)= \"send()\">Send</button>\r\n  </div>\r\n  <input type=\"text\" placeholder=\"Your name\" [(ngModel)]=\"msgDto.user\" />\r\n</div>\r\n","\r\nimport { Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { Builder } from 'protractor';\r\nimport { USPGun } from './../../Prototype/USPGun';\r\nimport { AK47Gun } from './../../Prototype/AK47Gun';\r\nimport { Facade, AK47, USP, Gun } from '../../models/Facade_Prototype';\r\nimport { BLOCK_SIZE, ROWS, COLS, KEY, POINTS, COLORS, LINES_PER_LEVEL, LEVEL } from '../../shared/constants';\r\nimport { Piece } from 'src/app/models/piece';\r\nimport { getSpeed, Time } from 'src/app/models/time';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { Director, PieceBuilder } from '../../Builder/builder';\r\nimport { changeColor, changeShape } from '../../Command/command';\r\nimport { SpecialPiece } from '../../models/SpecialPiece';\r\nimport { BoardService } from '../../services/board.service';\r\nimport { ChatService } from '../../services/chat.service';\r\nimport { Context, defender1, defender2, defender3, defender4 } from '../../Strategy/strategy';\r\nimport { OponentBoardComponent } from '../oponent-board/oponent-board.component';\r\nimport { PieceDto } from './../../Dto/PieceDto';\r\nimport { IPiece } from './../../shared/interfaces';\r\nimport { Player } from './../../user/player';\r\nimport { Bot } from 'src/app/Singleton/gameBot';\r\nimport { KeyboardControl } from './../../Bridge/KeyboardControl';\r\nimport { ConcreteGun } from 'src/app/Prototype/ConcreteGun';\r\nimport { Oponent } from 'src/app/Prototype/Oponent';\r\nimport { Task, TaskBank } from 'src/app/Composite/composite';\r\nimport { Stopwatch } from \"ts-stopwatch\";\r\nimport { SHAPES } from 'src/app/shared/constants'\r\n//import { Facade } from 'src/app/models/Facade';\r\n\r\n\r\n@Component({\r\n  selector: 'game-board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.css']\r\n})\r\nexport class BoardComponent implements OnInit {\r\n  @Input() boardService: BoardService;\r\n  @Input() userService: UserService;\r\n\r\n  // Get reference to the canvas.\r\n  @ViewChild('board', { static: true })\r\n  canvas: ElementRef<HTMLCanvasElement>;\r\n\r\n  player = new Player();\r\n  ctx: CanvasRenderingContext2D;\r\n  board: number[][];\r\n  piece: Piece;\r\n  special: SpecialPiece;\r\n  next: Piece;\r\n  pieceDto: PieceDto;\r\n  time = new Time({ start: 0, elapsed: 0, level: 1000 });\r\n  requestId: number;\r\n  stopwatch: Stopwatch = new Stopwatch();\r\n  strategy = new Context(new defender1());\r\n  pieceCount = 0;\r\n  commandColor: changeColor;\r\n  commandShape: changeShape;\r\n  keyboardControl = new KeyboardControl();\r\n  gunsArray: ConcreteGun[] = [];\r\n  gunsDeepCopiesArray: ConcreteGun[] = [];\r\n  gunsShallowCopiesArray: ConcreteGun[] = [];\r\n  oponents: Oponent[] = [{id: \"1\", name: \"Petras\"}, {id: \"1\", name: \"Jonas\"}, {id: \"1\", name: \"Ona\"}]\r\n\r\n  task1 = new Task('Raudonas J nukrenta ɾ', 2, './../../../images/T180.svg');\r\n  task2 = new Task('Mėlynas Z-blokas nukrenta N', 2, './../../../images/J180.svg');\r\n  task3 = new Task('Raudonas L nukrenta ﹂', 2, './../../../images/J180.svg');\r\n  task4 = new Task('geltonas T nukrenta ⊣', 2, './../../../images/J180.svg');\r\n  task5 = new Task('Žalias S-blokas nukrenta ᔕ', 2, './../../../images/J180.svg');\r\n  task6 = new Task('Mėlynas T-blokas nukrenta T', 2, './../../../images/J180.svg');\r\n\r\n\r\n  rootTaskBank = new TaskBank();\r\n  TaskBank1 = new TaskBank();\r\n  TaskBank2 = new TaskBank();\r\n  TaskBank3 = new TaskBank();\r\n\r\n\r\n\r\n  constructor(private chatService: ChatService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUserProfile().subscribe((res: any) => {\r\n     this.player = new Player({id: res.userId, name: res.UserName})\r\n    })\r\n    this.initBoard();\r\n  }\r\n\r\n  @HostListener('window:keydown', ['$event'])\r\n  keyEvent(event: KeyboardEvent) {\r\n    event.preventDefault();\r\n    var p = Object.assign({}, this.piece.dto)\r\n    switch(event.keyCode) {\r\n      case KEY.E: {\r\n        if (this.commandShape == null) {\r\n          this.commandShape = new changeShape(this.piece);\r\n        }\r\n        this.commandShape.execute();\r\n        break;\r\n      }\r\n      case KEY.R: {\r\n        this.commandShape.undo();\r\n        break;\r\n      }\r\n      case KEY.D: {\r\n        if (this.commandColor == null) {\r\n          this.commandColor = new changeColor(this.piece);\r\n        }\r\n        this.commandColor.execute();\r\n        break;\r\n      }\r\n      case KEY.F: {\r\n        this.commandColor.undo();\r\n        break;\r\n      }\r\n      case KEY.RIGHT:{\r\n        // p.x++;\r\n        this.move(this.keyboardControl.right(p));\r\n          break;\r\n      }\r\n      case KEY.LEFT: {\r\n        //p.x--;\r\n        this.move(this.keyboardControl.left(p));\r\n        break;\r\n      }\r\n      case KEY.DOWN: {\r\n        //p.y++;\r\n        this.move(this.keyboardControl.down(p));\r\n        break;\r\n      }\r\n      case KEY.UP: {\r\n        //p = this.boardService.rotate(p);\r\n        this.move(this.keyboardControl.rotate(p));\r\n        this.piece.rotationCount++;\r\n        break;\r\n      }\r\n      default: {\r\n        //statements;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  initBoard() {\r\n\r\n    this.rootTaskBank.addComponent(this.TaskBank1);\r\n    this.rootTaskBank.addComponent(this.TaskBank2);\r\n    this.rootTaskBank.addComponent(this.TaskBank3);\r\n\r\n    this.TaskBank1.addComponent(this.task1);\r\n    this.TaskBank1.addComponent(this.task2);\r\n\r\n    this.TaskBank2.addComponent(this.task3);\r\n    this.TaskBank2.addComponent(this.task4);\r\n\r\n    this.TaskBank3.addComponent(this.task5);\r\n    this.TaskBank3.addComponent(this.task6);\r\n\r\n    // Get the 2D context that we draw on.\r\n    this.ctx = this.canvas.nativeElement.getContext('2d');\r\n\r\n    // Calculate size of canvas from constants.\r\n    this.ctx.canvas.width = COLS * BLOCK_SIZE;\r\n    this.ctx.canvas.height = ROWS * BLOCK_SIZE;\r\n\r\n    this.ctx.scale(BLOCK_SIZE, BLOCK_SIZE);\r\n    this.boardService.getEmptyBoard();\r\n  }\r\n\r\n  //play() {\r\n  //  this.board = this.boardService.getBoardById(this.player.Id)\r\n  //  this.piece = new Piece(this.ctx);\r\n  //  //this.piece.draw();\r\n  //  this.animate();\r\n  //  this.boardService.broadcastPiece(this.piece.dto);\r\n  //}\r\n  animate(now = 0) {\r\n    console.log(this.stopwatch.getTime());\r\n    // Update elapsed time.\r\n    this.time.elapsed = now - this.time.start;\r\n    // If elapsed time has passed time for current level\r\n    if (this.time.elapsed > this.time.level) {\r\n      // Reset start time\r\n      this.time.start = now;\r\n      this.time = getSpeed(this.time, this.player.level);\r\n      if (this.pieceCount > 0) {\r\n        //this.move(this.blue.handle(this.piece.color, this.player.name, this.piece, this.boardService));\r\n        //=============Strategy Spell=======================\r\n        switch (this.piece.color.toLowerCase()) {\r\n          case \"blue\":\r\n            this.strategy.setStrategy(new defender1());\r\n            this.move(this.strategy.defend(this.player.name, this.piece, this.boardService));\r\n            break;\r\n          case \"yellow\":\r\n            this.strategy.setStrategy(new defender4());\r\n            this.strategy.defend(this.player.name, this.piece, this.boardService);\r\n            break;\r\n          default:\r\n        }\r\n      //==================================\r\n      }\r\n\r\n\r\n      if(!this.drop()){\r\n        this.gameOver();\r\n        return;\r\n      }\r\n    }\r\n    this.draw();\r\n    this.requestId = requestAnimationFrame(this.animate.bind(this));\r\n  }\r\n\r\n  move(p: IPiece) {\r\n    if(this.boardService.valid(p, this.board)){\r\n      this.piece.move(p)\r\n      this.piece.shape = p.shape;\r\n      this.piece.x = p.x;\r\n      this.piece.y = p.y;\r\n      this.boardService.broadcastPiece(this.piece.dto);\r\n    } else console.log(\"not valid\", p, this.piece)\r\n  }\r\n\r\n  drop(): boolean {\r\n    var p = Object.assign({}, this.piece.dto)\r\n    p.y++;\r\n    if(this.boardService.valid(p, this.board)){\r\n      this.piece.move(p)\r\n      this.boardService.broadcastPiece(this.piece.dto);\r\n    } else {\r\n      this.freeze();\r\n      this.clearLines();\r\n      this.boardService.broadcastBoard(this.board);\r\n\r\n      if (this.piece.y === 0) {\r\n        // Game over\r\n        return false;\r\n      }\r\n      this.piece = new Piece(this.ctx)\r\n      this.pieceCount--;\r\n      //=============Strategy Spell=======================\r\n      if (this.pieceCount > 0) {\r\n        if (this.piece.color.toLowerCase() == \"green\") {\r\n          this.strategy.setStrategy(new defender2());\r\n          this.strategy.defend(this.player.name, this.piece, this.boardService);\r\n        } else if (this.piece.color.toLowerCase() == \"red\") {\r\n          this.strategy.setStrategy(new defender3());\r\n          this.strategy.defend(this.player.name, this.piece, this.boardService);\r\n        } else {\r\n          KEY.RIGHT = 39;\r\n          KEY.LEFT = 37;\r\n        }\r\n\r\n      } else {\r\n        KEY.RIGHT = 39;\r\n        KEY.LEFT = 37;\r\n      }\r\n\r\n\r\n      this.piece.rotationCount = 0;\r\n      KEY.UP = 38;\r\n      this.commandColor = null;\r\n      this.commandShape = null;\r\n      /////\r\n\r\n\r\n\r\n      //this.piece = this.next;\r\n      //this.next = new Piece(this.ctx);\r\n      //this.next.drawNext(this.ctxNext);\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  draw() {\r\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    this.piece.draw();\r\n    this.drawBoard();\r\n  }\r\n\r\n  drawBoard() {\r\n    this.board.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value > 0) {\r\n          this.ctx.fillStyle = COLORS[value];\r\n          this.ctx.fillRect(x, y, 1, 1);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  ///when piece cannot move anymore\r\n  freeze() {\r\n    this.piece.shape.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value > 0) {\r\n          this.board[y + this.piece.y][x + this.piece.x] = value;\r\n        }\r\n      });\r\n    });\r\n    //console.table(this.board);\r\n  }\r\n\r\n  clearLines(){\r\n    let lines = 0;\r\n    this.board.forEach((row, y) => {\r\n      // If every value is greater than 0.\r\n      if (row.every(value => value > 0)) {\r\n        lines++;\r\n        // Remove the row.\r\n        this.board.splice(y, 1);\r\n        // Add a zero filled at the top.\r\n        this.board.unshift(Array(COLS).fill(0));\r\n      }\r\n    });\r\n    if (lines > 0) {\r\n      // Add points if we cleared some lines\r\n      this.player.points += this.getLineClearPoints(lines, this.player.level);\r\n      this.player.lines += lines;\r\n        // If we have reached the lines per level\r\n      if (this.player.lines >= 1/*LINES_PER_LEVEL*/) {\r\n        // Goto next level\r\n        this.player.level++;\r\n        // Remove lines so we start working for the next level\r\n        this.player.lines -= 1//LINES_PER_LEVEL;\r\n        // Increase speed of game.\r\n        this.time.level = LEVEL[this.player.level];\r\n      }\r\n    }\r\n  }\r\n\r\n  gameOver() {\r\n    cancelAnimationFrame(this.requestId);\r\n    this.ctx.fillStyle = 'black';\r\n    this.ctx.fillRect(1, 3, 8, 1.2);\r\n    this.ctx.font = '1px Arial';\r\n    this.ctx.fillStyle = 'red';\r\n    this.ctx.fillText('GAME OVER', 1.8, 4);\r\n    const s=Bot.getInstance();\r\n    this.chatService.broadcastMessage(s.gameOverMessage(this.player));\r\n  }\r\n\r\n  getLineClearPoints(lines: number, level: number): number {\r\n    const lineClearPoints = lines === 1 ? POINTS.SINGLE :\r\n          lines === 2 ? POINTS.DOUBLE :\r\n          lines === 3 ? POINTS.TRIPLE :\r\n          lines === 4 ? POINTS.TETRIS : 0;\r\n    return (level + 1) * lineClearPoints;\r\n  }\r\n\r\n\r\n  play() {\r\n    this.board = this.boardService.getBoardById(this.player.Id)\r\n    this.piece = new Piece(this.ctx);\r\n    console.log(\"play\");\r\n    //this.piece.draw();\r\n    this.animate();\r\n    this.boardService.broadcastPiece(this.piece.dto);\r\n  }\r\n\r\n\r\n  player1() {\r\n    if (this.player.points >= -200) {\r\n      this.player.points -= 200;\r\n      this.pieceCount = 5;\r\n    }\r\n  }\r\n\r\n\r\n  bomb(bomb: SpecialPiece) {\r\n    this.piece.setShape(bomb.shape);\r\n    this.piece.setColor(bomb.color);\r\n    this.piece.setRadius(bomb.radius);\r\n\r\n  }\r\n\r\n  getAK47(){\r\n    this.player.points = this.player.points - 50;\r\n    const kalasas = new AK47Gun();\r\n    kalasas.owner = this.player;\r\n    this.gunsArray.push(kalasas);\r\n  }\r\n\r\n  getUSP(){\r\n    this.player.points = this.player.points - 50;\r\n    const usp = new USPGun();\r\n    usp.owner = this.player;\r\n    this.gunsArray.push(usp);\r\n  }\r\n\r\n  player2() {\r\n    const director = new Director();\r\n    const builder = new PieceBuilder();\r\n    director.setBuilder(builder);\r\n    director.buildBomb();\r\n    var bomb = builder.getSpecialPiece();\r\n    this.piece.color = bomb.color;\r\n    this.piece.shape = bomb.shape;\r\n    this.piece.dto.shape = bomb.shape;\r\n  }\r\n\r\n\r\n  clone(gun: ConcreteGun){\r\n    this.player.points = this.player.points - 10;\r\n    const newGun = gun.clone();\r\n    this.gunsShallowCopiesArray.push(newGun)\r\n  }\r\n\r\n  cloneDeep(gun: USPGun){\r\n    this.player.points = this.player.points - 15;\r\n    this.gunsDeepCopiesArray.push(gun.cloneDeep());\r\n  }\r\n\r\n  setVersus(gun: ConcreteGun, name: string){\r\n    gun.oponent.name = name;\r\n  }\r\n\r\n  shoot(gun?: ConcreteGun){\r\n    if(gun){\r\n      console.log(gun.damage + gun.oponent.name);\r\n      let index = this.gunsDeepCopiesArray.indexOf(gun);\r\n      this.gunsDeepCopiesArray.splice(index, 1);\r\n    }\r\n    else {\r\n        this.gunsShallowCopiesArray.forEach(element => {\r\n          console.log(element.damage + element.oponent.name);\r\n          this.player.points = this.player.points - 5;\r\n          this.gunsShallowCopiesArray = [];\r\n        });\r\n    }\r\n  }\r\n  dropBomb() {\r\n    const director = new Director();\r\n    const builder = new PieceBuilder();\r\n    director.setBuilder(builder);\r\n    director.buildBomb();\r\n    const build = builder.getSpecialPiece();\r\n    this.bomb(build);\r\n  }\r\n\r\n\r\n\r\n\r\n  //Composite\r\n\r\n  positionTask(requiredColor, requiredShape, color, shape, task:Task) {\r\n    if (requiredColor === color && requiredShape === shape)  {\r\n      task.setToCompleted();\r\n    }\r\n  }\r\n\r\n  date: Date = new Date();\r\n\r\n\r\n  rotateClockwise = function (clockwise, N) {\r\n    var matrix = JSON.parse(JSON.stringify(clockwise));\r\n    for (var m = 0; m < N; m++) {\r\n      matrix = matrix.reverse();\r\n      // swap the symmetric elements\r\n      for (var i = 0; i < matrix.length; i++) {\r\n        for (var j = 0; j < i; j++) {\r\n          var temp = matrix[i][j];\r\n          matrix[i][j] = matrix[j][i];\r\n          matrix[j][i] = temp;\r\n        }\r\n      }\r\n    }\r\n    return matrix;\r\n  };\r\n\r\n\r\n  \r\n  test() {\r\n    console.log(this.rootTaskBank.getTasks())\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","\r\n<h1>{{player.name}}</h1>\r\n<gui-movement [piece]=\"piece\" (emitPiece)=\"move($event)\"></gui-movement>\r\n<div class=\"grid\">\r\n  <canvas #board class=\"game-board\"></canvas>\r\n  <div class=\"right-column\">\r\n    <div>\r\n      <h1>TETRIS</h1>\r\n      <p>Score: {{ player.points }}</p>\r\n      <p>Lines: {{ player.lines }}</p>\r\n      <p>Level: {{ player.level }}</p>\r\n      <p>Tasks:</p>\r\n      <ul>\r\n        <li>\r\n          <img src=\"../../../assets/images/T180.png\" alt=\"J\" />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <button (click)=\"play()\" class=\"play-button\">Play</button>\r\n    <button (click)=\"test()\" class=\"play-button\">Spell 1</button>\r\n    <button  (click)=\"player1()\" class=\"play-button\">Spell 2</button>\r\n    <button  (click)=\"player2()\" class=\"play-button\">Spell 3</button>\r\n    <button  class=\"play-button\" style=\"color: red;\">Defender 1</button>\r\n    <button  class=\"play-button\" style=\"color: red;\">Defender 2</button>\r\n    <button (click)=\"getAK47()\" class=\"play-button\" style=\"color: yellow;\">Gauti AK47 (-50)</button>\r\n    <button (click)=\"getUSP()\" class=\"play-button\" style=\"color: yellow;\">Gauti USP (-50)</button>\r\n  </div>\r\n</div>\r\n<br>\r\n<div>\r\n  Turimi ginklai\r\n  <ul>\r\n    <li *ngFor=\"let gun of gunsArray\">\r\n      {{gun.name}} priklausantis {{gun.owner.name}}\r\n      oponentas {{gun.oponent.name}}\r\n      <br>\r\n      <button (click)=\"clone(gun)\">Klonuoti -10</button>\r\n      <button *ngIf=\"gun.name=='USP'\" (click)=\"cloneDeep(gun)\">Klonuoti (Deep) -15 <br> </button>\r\n      <br>\r\n      <button (click)=\"setVersus(gun, 'Jonas')\">Jonas</button>\r\n      <button (click)=\"setVersus(gun, 'Petras')\">Petras</button>\r\n      <button (click)=\"setVersus(gun, 'Ona')\">Ona</button>\r\n    </li>\r\n    <br>\r\n  </ul>\r\n</div>\r\n<br>\r\n<div>\r\n  Ginklu shallow klonai <button (click)=\"shoot()\">Shoot -5</button>\r\n  <ul>\r\n    <li *ngFor=\"let gun of gunsShallowCopiesArray\">{{gun.name}}\r\n      oponentas {{gun.oponent.name}} <br> </li>\r\n  </ul>\r\n</div>\r\n\r\n<div>\r\n  Ginklu Deep klonai\r\n  <ul>\r\n    <li *ngFor=\"let gun of gunsDeepCopiesArray\">{{gun.name}}\r\n      oponentas {{gun.oponent.name}} <br>\r\n      <button (click)=\"setVersus(gun, 'Jonas')\">Jonas</button>\r\n      <button (click)=\"setVersus(gun, 'Petras')\">Petras</button>\r\n      <button (click)=\"setVersus(gun, 'Ona')\">Ona</button>\r\n      <br><button (click)=\"shoot(gun)\">Shoot</button>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BoardService } from '../services/board.service';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css']\r\n})\r\nexport class GameComponent implements OnInit {\r\n  boardService: BoardService\r\n  userService: UserService\r\n\r\n  constructor(private bService: BoardService, private uService:UserService) {\r\n    this.boardService = bService;\r\n    this.userService = uService;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <game-board [boardService]=\"boardService\" [userService]=\"userService\"></game-board>\r\n    </div>\r\n    <div class=\"col\">\r\n      <oponent-board [boardService]=\"boardService\" [userService]=\"userService\"></oponent-board>\r\n    </div>\r\n    <div class=\"col\">\r\n      <chat></chat>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { SubscriberService } from './../../services/subscriber.service';\r\nimport { Subject } from 'rxjs';\r\nimport { IObserver, ISubject } from './../../shared/interfaces';\r\nimport { Player } from './../../user/player';\r\nimport { PieceDto } from './../../Dto/PieceDto';\r\nimport { BoardService } from './../../services/board.service';\r\nimport { Component, OnInit, ViewChild, ElementRef, Input, OnDestroy } from '@angular/core';\r\nimport { COLS, BLOCK_SIZE, ROWS, COLORS } from '../../shared/constants';\r\nimport { IPiece } from 'src/app/shared/interfaces';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'oponent-board',\r\n  templateUrl: './oponent-board.component.html',\r\n  styleUrls: ['./oponent-board.component.css']\r\n})\r\nexport class OponentBoardComponent implements OnInit, IObserver, OnDestroy {\r\n  //@ViewChild('board', { static: true })\r\n  @Input() boardService: BoardService;\r\n  @Input() userService: UserService;\r\n\r\n  @ViewChild('board', { static: true })\r\n  canvas: ElementRef<HTMLCanvasElement>;\r\n\r\n  ctx: CanvasRenderingContext2D;\r\n  pieceDto: PieceDto;\r\n  board: number[][];\r\n  //token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySUQiOiJmZGU2YTg5Ny0xMmNhLTRjYjEtYTQwZS02ZjYwODk0OWI0ZGUiLCJuYmYiOjE2MDE4ODgzNTQsImV4cCI6MTYxNzYxMzE1NCwiaWF0IjoxNjAxODg4MzU0fQ.Zpv7hvOteKNtd9RGEzxux6ZT4-C9nnmnIKVt4j_kMMM\"\r\n  player = new Player({id: \"fde6a897-12ca-4cb1-a40e-6f608949b4de\", name: \"player2\"})\r\n\r\n\r\n  public getPlayerName(): string {\r\n    return null;\r\n  }\r\n  constructor(private subscriberService: SubscriberService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.subscriberService.add(this);\r\n    this.initBoard();\r\n    this.boardService.retrieveMapperPiece().subscribe((receivedObj: IPiece) => {\r\n      this.pieceDto = receivedObj;\r\n      this.draw(receivedObj)\r\n    });\r\n    /*this.boardService.retrieveMapperBoard().subscribe((retrieveObj: number[][]) => {\r\n      this.board = retrieveObj;\r\n      //this.drawBoard()\r\n    })*/\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.subscriberService.remove(this);\r\n  }\r\n\r\n  update(subject: ISubject) {\r\n    console.log(\"OBSERVER updates oponent board\");\r\n    this.subscriberService.retrieveMapperBoard().subscribe((retrieveObj: number[][]) => {\r\n      this.board = retrieveObj;\r\n    })\r\n  }\r\n\r\n  initBoard() {\r\n    // Get the 2D context that we draw on.\r\n    this.ctx = this.canvas.nativeElement.getContext('2d');\r\n\r\n    // Calculate size of canvas from constants.\r\n    this.ctx.canvas.width = COLS * BLOCK_SIZE;\r\n    this.ctx.canvas.height = ROWS * BLOCK_SIZE;\r\n\r\n    this.ctx.scale(BLOCK_SIZE, BLOCK_SIZE);\r\n\r\n    this.boardService.getEmptyBoard();\r\n  }\r\n\r\n  draw(obj: PieceDto) {\r\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    this.ctx.fillStyle = obj.color;\r\n    obj.shape.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value > 0) {\r\n          // this.x & this.y = position on the board\r\n          // x & y position are the positions of the shape\r\n          this.ctx.fillRect(obj.x + x, obj.y + y, 1, 1);\r\n        }\r\n      });\r\n    });\r\n    this.drawBoard();\r\n  }\r\n\r\n  drawBoard() {\r\n    if(this.board != null){\r\n      this.board.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          if (value > 0) {\r\n            this.ctx.fillStyle = COLORS[value];\r\n            this.ctx.fillRect(x, y, 1, 1);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n}\r\n","<h1>{{player.name}}</h1>\r\n<div class=\"grid\">\r\n  <canvas #board class=\"oponent-board\" style=\"border: 2px solid black;\"></canvas>\r\n  <div class=\"right-column\">\r\n</div>\r\n","import { Player } from '../user/player';\r\nimport { PieceDto } from './../Dto/PieceDto';\r\nimport { IPiece } from './../shared/interfaces';\r\n\r\nexport class SpecialPiece  {\r\n  x: number;\r\n  y: number;\r\n  color: string;\r\n  shape: number[][];\r\n  power: string;\r\n  speed: number;\r\n  radius: number;\r\n  player: Player;\r\n\r\n}\r\n","import { Player } from './../user/player';\r\nexport class Board {\r\n  player: Player;\r\n  height: number;\r\n  width: number;\r\n  boradMatrix: number[][];\r\n\r\n  constructor(values: Object){\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n","import { PieceDto } from './../Dto/PieceDto';\r\nimport { IPiece } from './../shared/interfaces';\r\nimport { getRandomPiece } from './../piecesAbstractFactory/abstractFactory';\r\nimport { Player } from '../user/player';\r\n\r\nexport class Piece implements IPiece {\r\n  x: number;\r\n  y: number;\r\n  color: string;\r\n  shape: number[][];\r\n  radius: number;\r\n  player: Player;\r\n  power: string;\r\n  speed: number;\r\n  rotationCount: number = 0;\r\n  dto = new PieceDto();\r\n\r\n  constructor(private ctx: CanvasRenderingContext2D) {\r\n    this.spawn();\r\n  }\r\n\r\n  move(p: IPiece){\r\n    this.x = this.dto.x = p.x;\r\n    this.y = this.dto.y = p.y;\r\n    this.shape = this.dto.shape = p.shape;\r\n  }\r\n\r\n  spawn() {\r\n    this.dto = getRandomPiece();\r\n    this.color = this.dto.color;\r\n    this.shape = this.dto.shape;\r\n\r\n    // Position where the shape spawns.\r\n    this.x = this.dto.x = 3;\r\n    this.y = this.dto.y = 0;\r\n\r\n  }\r\n\r\n  setShape(shape: number[][]) {\r\n    this.dto.shape = shape;\r\n  }\r\n\r\n  setPower(power: string) {\r\n    this.dto.power = power;\r\n  }\r\n\r\n  setColor(color: string) {\r\n    this.dto.color = color;\r\n  }\r\n\r\n  setRadius(radius: number) {\r\n    this.dto.radius = radius;\r\n  }\r\n\r\n\r\n  draw() {\r\n    this.ctx.fillStyle = this.color;\r\n    this.shape.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value > 0) {\r\n          // this.x & this.y = position on the board\r\n          // x & y position are the positions of the shape\r\n          this.ctx.fillRect(this.x + x, this.y + y, 1, 1);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { time } from 'console';\r\n\r\nexport class Time {\r\n  start: number;\r\n  elapsed: number;\r\n  level: number;\r\n\r\n  constructor(values?: Object){\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n\r\nclass TimeFactory {\r\n  public getExpertSpeed(values?: Object) : Time{\r\n    return new ExpertTime(values);\r\n  }\r\n\r\n  public getVeryFastSpeed(values?: Object) : Time{\r\n    return new VeryFastTime(values);\r\n  }\r\n\r\n  public getFastSpeed(values?: Object): Time{\r\n    return new FastTime(values);\r\n  }\r\n\r\n  public getNormalSpeed(values?: Object): Time{\r\n    return new NormalTime(values);\r\n  }\r\n\r\n  public getSlowSpeed(values?: Object): Time{\r\n    return new SlowTime(values);\r\n  }\r\n}\r\n\r\nclass ExpertTime extends Time{\r\n  constructor(values?: Object){\r\n    super(values);\r\n    if(this.level != 50){\r\n      console.log(\"speed changed to expert by factory\");\r\n    }\r\n    this.level = 50;\r\n  }\r\n}\r\n\r\nclass VeryFastTime extends Time{\r\n  constructor(values?: Object){\r\n    super(values);\r\n    if(this.level != 100){\r\n      console.log(\"speed changed to very fast by factory\");\r\n    }\r\n    this.level = 100;\r\n  }\r\n}\r\n\r\nclass FastTime extends Time{\r\n  constructor(values?: Object){\r\n    super(values);\r\n    if(this.level != 200){\r\n      console.log(\"speed changed to fast by factory\");\r\n    }\r\n    this.level = 200;\r\n  }\r\n}\r\n\r\nclass NormalTime extends Time{\r\n  constructor(values?: Object){\r\n    super(values);\r\n    if(this.level != 500){\r\n      console.log(\"speed changed to normal by factory\");\r\n    }\r\n    this.level = 500;\r\n  }\r\n}\r\n\r\nclass SlowTime extends Time{\r\n  constructor(values?: Object){\r\n    super(values);\r\n    if(this.level != 1000){\r\n      console.log(\"speed changed to slow by factory\");\r\n    }\r\n    this.level = 1000;\r\n  }\r\n}\r\n\r\nexport function getSpeed(timeObject: Time, level: number){\r\n  var factory = new TimeFactory();\r\n  if(level < 4){\r\n    return factory.getSlowSpeed({ start: timeObject.start, elapsed: timeObject.elapsed, level: timeObject.level });\r\n  }\r\n  else if (level < 7){\r\n    return factory.getNormalSpeed({ start: timeObject.start, elapsed: timeObject.elapsed, level: timeObject.level });\r\n  }\r\n  else if (level < 10){\r\n    return factory.getFastSpeed({ start: timeObject.start, elapsed: timeObject.elapsed, level: timeObject.level });\r\n  }\r\n  else if (level < 12){\r\n    return factory.getVeryFastSpeed({ start: timeObject.start, elapsed: timeObject.elapsed, level: timeObject.level });\r\n  }\r\n  else{\r\n    return factory.getExpertSpeed({ start: timeObject.start, elapsed: timeObject.elapsed, level: timeObject.level });\r\n  }\r\n}\r\n","\r\nimport { IPiece } from './../shared/interfaces';\r\n\r\ninterface AbstractFactory {\r\n  createJShape(): JShape;\r\n  createOShape(): OShape;\r\n  createLShape(): LShape;\r\n  createZShape(): ZShape;\r\n  createTShape(): TShape;\r\n  createSShape(): SShape;\r\n}\r\n\r\nclass RedFactory implements AbstractFactory {\r\n  public createJShape(): JShape {\r\n      return new RedJShape();\r\n  }\r\n  public createOShape(): OShape {\r\n      return new RedOShape();\r\n  }\r\n  public createLShape(): LShape {\r\n    return new RedLShape();\r\n  }\r\n  public createZShape(): ZShape {\r\n    return new RedZShape();\r\n  }\r\n  public createTShape(): TShape {\r\n    return new RedTShape();\r\n  }\r\n  public createSShape(): SShape {\r\n    return new RedSShape();\r\n  }\r\n}\r\n\r\nclass BlueFactory implements AbstractFactory {\r\n  public createJShape(): JShape {\r\n    const simple = new ConcreteBlueJShape();\r\n    const decorator1 = new SoundDecorator(simple);\r\n    return new AlertDecorator(decorator1);\r\n  }\r\n  public createOShape(): OShape {\r\n      return new BlueOShape();\r\n  }\r\n  public createLShape(): LShape {\r\n    return new BlueLShape();\r\n  }\r\n  public createZShape(): ZShape {\r\n    return new BlueZShape();\r\n  }\r\n  public createTShape(): TShape {\r\n    return new BlueTShape();\r\n  }\r\n  public createSShape(): SShape {\r\n    return new BlueSShape();\r\n  }\r\n}\r\n\r\nclass GreenFactory implements AbstractFactory {\r\n  public createJShape(): JShape {\r\n      return new GreenJShape();\r\n  }\r\n  public createOShape(): OShape {\r\n      return new GreenOShape();\r\n  }\r\n  public createLShape(): LShape {\r\n    return new GreenLShape();\r\n  }\r\n  public createZShape(): ZShape {\r\n    return new GreenZShape();\r\n  }\r\n  public createTShape(): TShape {\r\n    return new GreenTShape();\r\n  }\r\n  public createSShape(): SShape {\r\n    return new GreenSShape();\r\n  }\r\n}\r\n\r\nclass YellowFactory implements AbstractFactory {\r\n  public createJShape(): JShape {\r\n      return new YellowJShape();\r\n  }\r\n  public createOShape(): OShape {\r\n      return new YellowOShape();\r\n  }\r\n  public createLShape(): LShape {\r\n    return new YellowLShape();\r\n  }\r\n  public createZShape(): ZShape {\r\n    return new YellowZShape();\r\n  }\r\n  public createTShape(): TShape {\r\n    return new YellowTShape();\r\n  }\r\n  public createSShape(): SShape {\r\n    return new YellowSShape();\r\n  }\r\n}\r\n\r\nclass JShape implements IPiece{\r\n  rotationCount: number;\r\n  radius: number;\r\n  power: string;\r\n  x: number;\r\n  y: number;\r\n  color: string;\r\n  shape = [[2, 0, 0], [2, 2, 2], [0, 0, 0]];\r\n}\r\n\r\nclass RedJShape extends JShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"red\";\r\n    console.log(\"abstract factory created red JShape\");\r\n  }\r\n}\r\n\r\nexport abstract class BlueJShape extends JShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"blue\";\r\n  }\r\n}\r\n\r\nclass GreenJShape extends JShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"green\";\r\n    console.log(\"abstract factory created green JShape\");\r\n  }\r\n}\r\n\r\nclass YellowJShape extends JShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"yellow\";\r\n    console.log(\"abstract factory created yellow JShape\");\r\n  }\r\n}\r\n\r\nclass OShape implements IPiece {\r\n  rotationCount: number;\r\n  radius: number;\r\n  power: string;\r\n  x: number;\r\n  y: number;\r\n  color: string;\r\n  shape = [[2, 2, 0], [2, 2, 0], [0, 0, 0]];\r\n}\r\n\r\nclass RedOShape extends OShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"red\";\r\n    console.log(\"abstract factory created red OShape\");\r\n  }\r\n}\r\n\r\nclass BlueOShape extends OShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"blue\";\r\n    console.log(\"abstract factory created blue OShape\");\r\n  }\r\n}\r\n\r\nclass GreenOShape extends OShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"green\";\r\n    console.log(\"abstract factory created green OShape\");\r\n  }\r\n}\r\n\r\nclass YellowOShape extends OShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"yellow\";\r\n    console.log(\"abstract factory created yellow OShape\");\r\n  }\r\n}\r\n\r\nclass LShape implements IPiece {\r\n  rotationCount: number;\r\n  radius: number;\r\n  power: string;\r\n  x: number;\r\n  y: number;\r\n  color: string;\r\n  shape = [[0, 0, 0], [2, 2, 2], [2, 0, 0]];\r\n}\r\n\r\nclass RedLShape extends LShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"red\";\r\n    console.log(\"abstract factory created red LShape\");\r\n  }\r\n}\r\n\r\nclass BlueLShape extends LShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"blue\";\r\n    console.log(\"abstract factory created blue LShape\");\r\n  }\r\n}\r\n\r\nclass GreenLShape extends LShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"green\";\r\n    console.log(\"abstract factory created green LShape\");\r\n  }\r\n}\r\n\r\nclass YellowLShape extends LShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"yellow\";\r\n    console.log(\"abstract factory created yellow LShape\");\r\n  }\r\n}\r\n\r\nclass ZShape implements IPiece {\r\n  rotationCount: number;\r\n  radius: number;\r\n  power: string;\r\n  x: number;\r\n  y: number;\r\n  color: string;\r\n  shape = [[0, 0, 0], [2, 2, 0], [0, 2, 2]];\r\n}\r\n\r\nclass RedZShape extends ZShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"red\";\r\n    console.log(\"abstract factory created red ZShape\");\r\n  }\r\n}\r\n\r\nclass BlueZShape extends ZShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"blue\";\r\n    console.log(\"abstract factory created blue ZShape\");\r\n  }\r\n}\r\n\r\nclass GreenZShape extends ZShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"green\";\r\n    console.log(\"abstract factory created green ZShape\");\r\n  }\r\n}\r\n\r\nclass YellowZShape extends ZShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"yellow\";\r\n    console.log(\"abstract factory created yellow ZShape\");\r\n  }\r\n}\r\n\r\nclass TShape implements IPiece {\r\n  rotationCount: number;\r\n  radius: number;\r\n  power: string;\r\n  x: number;\r\n  y: number;\r\n  color: string;\r\n  shape = [[2, 2, 2], [0, 2, 0], [0, 0, 0]];\r\n}\r\n\r\nclass RedTShape extends TShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"red\";\r\n    console.log(\"abstract factory created red TShape\");\r\n  }\r\n}\r\n\r\nclass BlueTShape extends TShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"blue\";\r\n    console.log(\"abstract factory created blue TShape\");\r\n  }\r\n}\r\n\r\nclass GreenTShape extends TShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"green\";\r\n    console.log(\"abstract factory created green TShape\");\r\n  }\r\n}\r\n\r\nclass YellowTShape extends TShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"yellow\";\r\n    console.log(\"abstract factory created yellow TShape\");\r\n  }\r\n}\r\n\r\nclass SShape implements IPiece {\r\n  rotationCount: number;\r\n  radius: number;\r\n  power: string;\r\n  x: number;\r\n  y: number;\r\n  color: string;\r\n  shape = [[0, 0, 0], [0, 2, 2], [2, 2, 0]];\r\n}\r\n\r\nclass RedSShape extends SShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"red\";\r\n    console.log(\"abstract factory created red SShape\");\r\n  }\r\n}\r\n\r\nclass BlueSShape extends SShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"blue\";\r\n    console.log(\"abstract factory created blue SShape\");\r\n  }\r\n}\r\n\r\nclass GreenSShape extends SShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"green\";\r\n    console.log(\"abstract factory created green SShape\");\r\n  }\r\n}\r\n\r\nclass YellowSShape extends SShape {\r\n  constructor(){\r\n    super();\r\n    this.color = \"yellow\";\r\n    console.log(\"abstract factory created yellow SShape\");\r\n  }\r\n}\r\n\r\n\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nexport function getRandomPiece(){\r\n  var factoryType = getRandomInt(4);\r\n  let factory = null;\r\n  switch(factoryType) {\r\n    case 0: {\r\n       factory = new RedFactory();\r\n       break;\r\n    }\r\n    case 1: {\r\n       factory = new BlueFactory();\r\n       break;\r\n    }\r\n    case 2: {\r\n      factory = new GreenFactory();\r\n      break;\r\n    }\r\n   case 3: {\r\n     factory = new YellowFactory();\r\n     break;\r\n    }\r\n    default: {\r\n      factory = new BlueFactory();\r\n       break;\r\n    }\r\n  }\r\n  var pieceType = getRandomInt(6);\r\n  switch(pieceType) {\r\n    case 0: {\r\n       return factory.createJShape();\r\n       break;\r\n    }\r\n    case 1: {\r\n      return factory.createOShape();\r\n       break;\r\n    }\r\n    case 2: {\r\n      return factory.createLShape();\r\n       break;\r\n    }\r\n    case 3: {\r\n      return factory.createZShape();\r\n       break;\r\n    }\r\n    case 4: {\r\n      return factory.createTShape();\r\n       break;\r\n    }\r\n    case 5: {\r\n      return factory.createSShape();\r\n       break;\r\n    }\r\n    default: {\r\n      return factory.createJShape();\r\n       break;\r\n    }\r\n  }\r\n}\r\n\r\nclass ConcreteBlueJShape extends BlueJShape {\r\n  constructor() {\r\n    super();\r\n    this.color = \"blue\";\r\n    console.log(\"ConcreteBlueJShape created\");\r\n  }\r\n  public operation(): string {\r\n      return 'ConcreteComponent';\r\n  }\r\n}\r\n\r\nclass Decorator extends BlueJShape {\r\n  protected wrapee: BlueJShape;\r\n\r\n  constructor(component: BlueJShape) {\r\n    super();\r\n    this.wrapee = component;\r\n  }\r\n\r\n  public operation(option){\r\n    if(option !== 1){\r\n      var snd = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\r\n      snd.play();\r\n    }\r\n    else{\r\n      alert(\"Decorator alert!\");\r\n    }\r\n  }\r\n}\r\n\r\nclass AlertDecorator extends Decorator {\r\n  constructor(shape:BlueJShape){\r\n    super(shape);\r\n    console.log(\"using alert decorator\");\r\n    this.operation();\r\n  }\r\n\r\n  public operation() {\r\n    super.operation(1);\r\n  }\r\n}\r\n\r\nclass SoundDecorator extends Decorator {\r\n  constructor(shape:BlueJShape){\r\n    super(shape);\r\n    console.log(\"using sound decorator\");\r\n    this.operation();\r\n  }\r\n\r\n  public operation() {\r\n    super.operation(2);\r\n  }\r\n}\r\n","import { Piece } from 'src/app/models/piece';\r\nimport { Player } from './../user/player';\r\nimport { environment } from './../../environments/environment';\r\nimport { IPiece, IObserver } from './../shared/interfaces';\r\nimport { ConnectionService } from './connection.service';\r\nimport { PieceDto } from './../Dto/PieceDto';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { COLS, ROWS } from '../shared/constants';\r\nimport { Board } from '../models/board';\r\nimport { SpecialPiece } from '../models/SpecialPiece';\r\nimport { IAdapter } from '../Adapter/IAdapter';\r\nimport { Adapter } from '../Adapter/Adapter';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BoardService implements IObserver {\r\n\r\n  readonly rootUrl=environment.rootUrl + \"board/\"\r\n  boards: Board[] = [];\r\n\r\n  private sharedPiece = new Subject<PieceDto>();\r\n  private sharedBoard = new Subject<number[][]>();\r\n  private adapter: IAdapter;\r\n\r\n  constructor(private http: HttpClient, private connectionService:ConnectionService) {\r\n    this.adapter = new Adapter();\r\n    this.connectionService.connection.on(\"Spawn\", (x, y, color, shape) => {\r\n      this.adapter.mapSpawnPiece(x, y, color, shape)\r\n      this.sharedPiece.next(this.adapter.getPiece());\r\n    });\r\n    this.connectionService.connection.on(\"BroadcastBoard\", (board) => {\r\n      this.sharedBoard.next(board)\r\n    });\r\n    this.connectionService.add(this);\r\n  }\r\n\r\n  /* ****************************** Public Mehods **************************************** */\r\n\r\n  public update(): void {\r\n    if(this.connectionService.getState() == true){\r\n      console.log(\"Board Observer reacted to event\");\r\n    }\r\n  }\r\n\r\n  public broadcastBoard(board: number[][]) {\r\n    var tokenHeader = new HttpHeaders({'Authorization':'Bearer ' + localStorage.getItem('token')});\r\n    this.http.post(this.rootUrl + 'broadcarst/board', board, {headers: tokenHeader}).subscribe()\r\n  }\r\n\r\n  public broadcastPiece(piece: IPiece){\r\n    var tokenHeader = new HttpHeaders({'Authorization':'Bearer ' + localStorage.getItem('token')});\r\n    this.http.post(this.rootUrl + 'start', piece, {headers: tokenHeader}).subscribe()\r\n  }\r\n\r\n  public broadcastPieceBuilder(piece: SpecialPiece) {\r\n    var tokenHeader = new HttpHeaders({ 'Authorization': 'Bearer ' + localStorage.getItem('token') });\r\n    this.http.post(this.rootUrl + 'start', piece, { headers: tokenHeader }).subscribe()\r\n  }\r\n\r\n  getEmptyBoard() {\r\n    var tokenHeader = new HttpHeaders({'Authorization':'Bearer ' + localStorage.getItem('token')})\r\n    this.http.get(this.rootUrl, {headers: tokenHeader}).subscribe((res: any) => {\r\n      let board = new Board({\r\n        player : new Player({id: res.Player}),\r\n        height: res.Height,\r\n        width: res.Width,\r\n        boradMatrix: res.BoardMatrix\r\n      })\r\n      this.boards.push(board);\r\n    })\r\n  }\r\n\r\n  getBoards(): Board[] {\r\n    return this.boards;\r\n  }\r\n\r\n  getBoardById(id: string){\r\n    return this.boards.find(b => b.player.Id === id).boradMatrix;\r\n  }\r\n\r\n  public retrieveMapperPiece(): Observable<PieceDto> {\r\n    return this.sharedPiece.asObservable();\r\n  }\r\n\r\n  public retrieveMapperBoard(): Observable<number[][]> {\r\n    return this.sharedBoard.asObservable();\r\n  }\r\n\r\n\r\n  // -------------- GAME LOGIC --------------------\r\n  valid(p: IPiece, board: number[][]): boolean {\r\n    return p.shape.every((row, dy) => {\r\n      return row.every((value, dx) => {\r\n        let x = p.x + dx;\r\n        let y = p.y + dy;\r\n        return (\r\n          this.isEmpty(value) ||\r\n          (this.insideWalls(x) &&\r\n            this.aboveFloor(y) &&\r\n            this.notOccupied(board, x, y))\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  isEmpty(value: number): boolean {\r\n    return value === 0;\r\n  }\r\n\r\n  insideWalls(x: number): boolean {\r\n    return x >= 0 && x < COLS;\r\n  }\r\n\r\n  aboveFloor(y: number): boolean {\r\n    return y <= ROWS;\r\n  }\r\n\r\n  notOccupied(board: number[][], x: number, y: number): boolean {\r\n    return board[y] && board[y][x] === 0;\r\n  }\r\n\r\n  rotate(piece: IPiece): IPiece {\r\n    let p: IPiece = JSON.parse(JSON.stringify(piece));\r\n    for (let y = 0; y < p.shape.length; ++y) {\r\n      for (let x = 0; x < y; ++x) {\r\n        [p.shape[x][y], p.shape[y][x]] = [p.shape[y][x], p.shape[x][y]];\r\n      }\r\n    }\r\n    p.shape.forEach(row => row.reverse());\r\n    return p;\r\n  }\r\n\r\n}\r\n","import { IObserver } from './../shared/interfaces';\r\nimport { Bot } from './../Singleton/gameBot';\r\nimport { ConnectionService } from './connection.service';\r\nimport { MessageDto } from './../Dto/MessageDto';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService implements IObserver {\r\n  readonly POST_URL = environment.rootUrl + \"chat/send/\"\r\n\r\n  private receiveMessageObject: MessageDto = new MessageDto(\"\", \"\");\r\n  private sharedObj = new Subject<MessageDto>();\r\n\r\n  constructor(private http: HttpClient, private connectionService: ConnectionService) {\r\n    this.connectionService.connection.on(\"ReceiveOne\", (user, message) => {\r\n      this.mapReceiveMessage(user, message);\r\n    });\r\n    this.connectionService.add(this);\r\n  }\r\n\r\n  private mapReceiveMessage(user: string, message: string): void {\r\n    this.receiveMessageObject.user = user;\r\n    this.receiveMessageObject.msgText = message;\r\n    this.sharedObj.next(this.receiveMessageObject);\r\n  }\r\n\r\n   /* ****************************** Public Mehods **************************************** */\r\n\r\n   //Cals the controller method\r\n   public broadcastMessage(msgDto: any){\r\n    //console.log(msgDto)\r\n    this.http.post(this.POST_URL, msgDto).subscribe();\r\n   }\r\n\r\n   public retrieveMapperObject(): Observable<MessageDto> {\r\n     return this.sharedObj.asObservable();\r\n   }\r\n\r\n   public update(): void {\r\n    if(this.connectionService.getState() == true){\r\n      console.log(\"Chat Observer reacted to event\");\r\n      this.http.post(this.POST_URL, Bot.getInstance().introRules()).subscribe();\r\n    }\r\n  }\r\n}\r\n","import { ISubject, IObserver } from './../shared/interfaces';\r\nimport { Injectable } from '@angular/core';\r\nimport * as signalR from '@microsoft/signalr';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConnectionService implements ISubject {\r\n  private connectoin: any = new signalR.HubConnectionBuilder().withUrl(\"https://localhost:44356/tetrissocket\", {\r\n    //player1 Token\r\n    accessTokenFactory: () => localStorage.getItem('token')\r\n  }) //mapping to the tetrishus as in startup\r\n  .configureLogging(signalR.LogLevel.Information)\r\n  .build();\r\n\r\n  readonly POST_URL = environment.rootUrl + \"chat/send/\"\r\n\r\n  private state = false;\r\n  private observers: IObserver[] = [];\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.connectoin.onclose(async () => {\r\n      await this.start();\r\n    });\r\n    this.start();\r\n  }\r\n\r\n  // Observer metodai --------------------------\r\n  add(observer: IObserver) {\r\n    const isExist = this.observers.includes(observer);\r\n    if(isExist){\r\n      return console.log('Subject: Observer has been attached already.');\r\n    }\r\n\r\n    console.log('Subject: Attached an observer.');\r\n    this.observers.push(observer);\r\n  }\r\n\r\n  remove(observer: IObserver) {\r\n    const observerIndex = this.observers.indexOf(observer);\r\n    if (observerIndex === -1) {\r\n        return console.log('Subject: Nonexistent observer.');\r\n    }\r\n\r\n    this.observers.splice(observerIndex, 1);\r\n    console.log('Subject: Detached an observer.');\r\n  }\r\n\r\n  notify() {\r\n    console.log('Subject: Notifying observers...');\r\n    for (const observer of this.observers) {\r\n        observer.update(this);\r\n    }\r\n  }\r\n//----------------------------------------------\r\n\r\n  public async start(){\r\n    try {\r\n      await this.connectoin.start();\r\n      console.log(\"connected!\");\r\n      this.state = true;\r\n      this.notify();\r\n    }\r\n    catch (err) {\r\n      console.log(err);\r\n      console.log(\"Prisijungti nepavyko\")\r\n      setTimeout(() => this.start(), 5000);\r\n    }\r\n  }\r\n\r\n  get connection() {\r\n    return this.connectoin\r\n  }\r\n\r\n  getState() {\r\n    return this.state\r\n  }\r\n}\r\n","import { ConnectionService } from './connection.service';\r\nimport { IObserver, ISubject } from './../shared/interfaces';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubscriberService implements ISubject {\r\n  private sharedBoard = new Subject<number[][]>();\r\n  public boardState: number[][]\r\n  observers: IObserver[] = [];\r\n\r\n  constructor(private connectionService: ConnectionService) { \r\n    this.connectionService.connection.on(\"BroadcastBoard\", (board) => {\r\n      this.boardState = board;\r\n      this.sharedBoard.next(board);\r\n      this.notify('Subscriber service Subject: Notifying observers...');\r\n    });\r\n  }\r\n\r\n  add(observer: IObserver) {\r\n    const isExist = this.observers.includes(observer);\r\n    if(isExist){\r\n      return console.log('Subscriber service Subject: Observer has been attached already.');\r\n    }\r\n\r\n    console.log('Subscriber service Subject: Attached an observer.');\r\n    this.observers.push(observer);\r\n  }\r\n\r\n  remove(observer: IObserver) {\r\n    const observerIndex = this.observers.indexOf(observer);\r\n    if (observerIndex === -1) {\r\n        return console.log('Subscriber service Subject: Nonexistent observer.');\r\n    }\r\n\r\n    this.observers.splice(observerIndex, 1);\r\n    console.log('Subscriber service Subject: Detached an observer.');\r\n  }\r\n\r\n  notify(line? :string) {\r\n    if(line)\r\n    console.log(line);\r\n    for (const observer of this.observers) {\r\n        observer.update(this);\r\n    }\r\n  }\r\n\r\n  public retrieveMapperBoard(): Observable<number[][]> {\r\n    return this.sharedBoard.asObservable();\r\n  }\r\n}\r\n","import { Adapter } from './../Adapter/Adapter';\r\nimport { INewUser, IUser } from './../shared/interfaces';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from './../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IAdapter } from '../Adapter/IAdapter';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  readonly rootUrl = environment.rootUrl + \"appusers/\"\r\n  adapter: IAdapter;\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  register(newUser: INewUser){\r\n    this.adapter = new Adapter();\r\n    this.adapter.mapUser(newUser);\r\n    return this.http.post(this.rootUrl + 'register', this.adapter.getUser());\r\n  }\r\n\r\n  login(user: IUser){\r\n    return this.http.post(this.rootUrl + 'login', user);\r\n  }\r\n\r\n  getUserProfile(){\r\n    var tokenHeader = new HttpHeaders({'Authorization':'Bearer ' + localStorage.getItem('token')});\r\n    return this.http.get(environment.rootUrl + \"userprofiles/\", {headers: tokenHeader});\r\n  }\r\n}\r\n","export const COLS = 10;\r\nexport const ROWS = 20;\r\nexport const BLOCK_SIZE = 30;\r\nexport const LINES_PER_LEVEL = 10;\r\n\r\nexport class KEY {\r\n  static readonly ESC = 27;\r\n  static readonly SPACE = 32;\r\n  static  LEFT = 37;\r\n  static  RIGHT = 39;\r\n  static  DOWN = 40;\r\n  static UP = 38;\r\n  static E = 69;\r\n  static R = 82;\r\n  static D = 68;\r\n  static F = 70;\r\n}\r\n\r\nexport class POINTS {\r\n  static readonly SINGLE = 100;\r\n  static readonly DOUBLE = 300;\r\n  static readonly TRIPLE = 500;\r\n  static readonly TETRIS = 800;\r\n  static readonly SOFT_DROP = 1;\r\n  static readonly HARD_DROP = 2;\r\n}\r\n\r\nexport class SHAPES {\r\n  static readonly JShape = [[2, 0, 0], [2, 2, 2], [0, 0, 0]];\r\n  static readonly OShape = [[2, 2, 0], [2, 2, 0], [0, 0, 0]];\r\n  static readonly LShape = [[0, 0, 0], [2, 2, 2], [2, 0, 0]];\r\n  static readonly ZShape = [[0, 0, 0], [2, 2, 0], [0, 2, 2]];\r\n  static readonly TShape = [[2, 2, 2], [0, 2, 0], [0, 0, 0]];\r\n  static readonly SShape = [[0, 0, 0], [0, 2, 2], [2, 2, 0]];\r\n}\r\n\r\nexport const SHAPE = [\r\n  [[2, 0, 0], [2, 2, 2], [0, 0, 0]],\r\n  [[2, 2, 0], [2, 2, 0], [0, 0, 0]],\r\n  [[0, 0, 0], [2, 2, 2], [2, 0, 0]],\r\n  [[0, 0, 0], [2, 2, 0], [0, 2, 2]],\r\n  [[2, 2, 2], [0, 2, 0], [0, 0, 0]],\r\n  [[0, 0, 0], [0, 2, 2], [2, 2, 0]]\r\n];\r\n\r\nexport const COLORS = [\r\n  'none',\r\n  'cyan',\r\n  'blue',\r\n  'orange',\r\n  'yellow',\r\n  'green',\r\n  'purple',\r\n  'red'\r\n];\r\n\r\nexport class LEVEL {\r\n  static readonly 0 = 800;\r\n  static readonly 1 = 720;\r\n  static readonly 2 = 630;\r\n  static readonly 3 = 550;\r\n  static readonly 4 = 470;\r\n  static readonly 5 = 380;\r\n  static readonly 6 = 300;\r\n  static readonly 7 = 220;\r\n  static readonly 8 = 130;\r\n  static readonly 9 = 100;\r\n  static readonly 10 = 80;\r\n  static readonly 11 = 80;\r\n  static readonly 12 = 80;\r\n  static readonly 13 = 70;\r\n  static readonly 14 = 70;\r\n  static readonly 15 = 70;\r\n  static readonly 16 = 50;\r\n  static readonly 17 = 50;\r\n  static readonly 18 = 50;\r\n  static readonly 19 = 30;\r\n  static readonly 20 = 30;\r\n  // 29+ is 20ms\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<nav class=\"navbar navbar-light bg-light\">\r\n  <div class=\"container\">\r\n      <div id=\"navbarMenu\">\r\n        <ul class=\"navbar mr-auto\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"user/login\">Login<span class=\"sr-only\"></span></a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"game\">Game<span class=\"sr-only\"></span></a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n  </div>\r\n</nav>\r\n","export class User {\r\n  constructor(\r\n    public name:string,\r\n    public password: string\r\n  ){}\r\n}\r\n\r\nexport class NewUser {\r\n  constructor(\r\n    public name:string,\r\n    public password: string,\r\n    public password2: string\r\n  ){}\r\n}\r\n","import { UserService } from './../../services/user.service';\r\nimport { User } from './../../shared/user';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  model = new User(\"\", \"\");\r\n\r\n  constructor(private service: UserService) {}\r\n\r\n  onSubmit() {\r\n    this.service.login(this.model).subscribe((res: any) => localStorage.setItem('token', res.token));\r\n  }\r\n}","<form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">User Name</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"name\" [(ngModel)]=\"model.name\" name=\"name\" required>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputPassword1\">Password</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"password\" [(ngModel)]=\"model.password\" name=\"password\" required>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!loginForm.form.valid\">login</button>\r\n</form>\r\n","export class Player {\r\n  Id: string = \"\";\r\n  name: string = \"\";\r\n  points: number = 0;\r\n  lines: number = 0;\r\n  level: number = 0;\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { NewUser, User } from 'src/app/shared/user';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent {\r\n\r\n  model = new NewUser(\"\", \"\", \"\");\r\n\r\n  constructor(private service: UserService) {}\r\n\r\n  onSubmit() {\r\n    this.service.register(this.model).subscribe(res => console.log(res));\r\n  }\r\n}\r\n","<form #registrationForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"name\">User Name</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"name\" [(ngModel)]=\"model.name\" name=\"name\" required>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputPassword1\">Password</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"password\" [(ngModel)]=\"model.password\" name=\"password\" required>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputPassword2\">Confirm Password</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"password2\" [(ngModel)]=\"model.password2\" name=\"password2\" required>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!registrationForm.form.valid\">register</button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n      <div>\r\n          <ul class=\"nav nav-tabs justify-content-center\">\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" [routerLink]=\"['/user/login/']\" routerLinkActive='active'>Sign In</a>\r\n              </li>\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" [routerLink]=\"['/user/registration/']\" routerLinkActive='active'>Sign up</a>\r\n              </li>\r\n          </ul>\r\n      </div>\r\n  </div>\r\n  <div class=\"row\">\r\n      <div class=\"col-md-8\">\r\n          <router-outlet></router-outlet>\r\n      </div>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  rootUrl: \"https://localhost:44356/api/\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}